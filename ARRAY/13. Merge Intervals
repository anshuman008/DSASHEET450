class Solution {
public:
    vector<vector<int>> merge(vector<vector<int>>& intervals) {

  
      sort(intervals.begin(),intervals.end());

        stack<pair<int,int>> st;
        st.push({intervals[0][0],intervals[0][1]});

      for(int i = 1; i<intervals.size(); i++){
          int start1 = st.top().first;
          int end1  = st.top().second;
          int start2  = intervals[i][0];
          int end2  = intervals[i][1];

          if(end1 < start2){
              st.push({start2,end2});
          }
          else{
              st.pop();
              end1 = max(end1,end2);
              st.push({start1,end1});
          }
      }
   vector<vector<int>> ans;
      while(!st.empty()){
           ans.push_back({st.top().first,st.top().second});
           st.pop();
      }

      return ans;
    }
};
